version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:13
    container_name: spatx_db
    environment:
      POSTGRES_DB: spatx_db
      POSTGRES_USER: spatx_user
      POSTGRES_PASSWORD: spatx_password_2024
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U spatx_user -d spatx_db"]
      interval: 30s
      timeout: 10s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: spatx_backend
    environment:
      - DATABASE_URL=postgresql://spatx_user:spatx_password_2024@db:5432/spatx_db
      - SECRET_KEY=your-super-secret-jwt-key-change-this-in-production
      - ACCESS_TOKEN_EXPIRE_MINUTES=480
      - LAB_SERVER_IP=10.222.72.147
      - ALLOWED_ORIGINS=http://10.222.72.147,http://localhost:3000,http://127.0.0.1:3000
    volumes:
      - ./uploads:/app/uploads
      - ./spatx_core:/app/spatx_core
      - ./results:/app/results
      - ./logs:/app/logs
    ports:
      - "8001:8001"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8001/health || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 60s

  # React Frontend  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    container_name: spatx_frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:1.20
    container_name: spatx_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

volumes:
  postgres_data: